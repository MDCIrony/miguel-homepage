---
import Terminal from '../components/Terminal.astro';
import Layout from '../layouts/Layout.astro';

const projects = [
    {
        title: "Sistema de Gestión de Tareas",
        description: "Aplicación web para gestión de proyectos y tareas con React y Node.js",
        tech: ["React", "Node.js", "MongoDB", "Express"],
        github: "#",
        demo: "#",
        image: "/placeholder-project.jpg"
    },
    {
        title: "Análisis de Datos Climáticos",
        description: "Visualización de datos climáticos usando Python y bibliotecas de análisis de datos",
        tech: ["Python", "Pandas", "Matplotlib", "Jupyter"],
        github: "#",
        demo: "#",
        image: "/placeholder-project.jpg"
    },
    {
        title: "API de Comercio Electrónico",
        description: "Backend para plataforma de comercio electrónico con autenticación y procesamiento de pagos",
        tech: ["Node.js", "Express", "PostgreSQL", "JWT"],
        github: "#",
        demo: "#",
        image: "/placeholder-project.jpg"
    }
];
---
<Layout title="Projects - Miguel's Terminal">
  <Terminal fullscreen={true} title="miguel@debian: ~/projects">
    <div class="command">ls -l ~/projects</div>
    <div class="output">
      <p>Listing all projects (total: {projects.length}):</p>
      <div class="projects-grid">
        {projects.map(project => (
          <div class="project-card">
            <div class="crt-container">
              <img src={project.image} alt={project.title} class="project-image" />
              <div class="crt-overlay"></div>
              <div class="crt-scanlines"></div>
              <div class="crt-flicker"></div>
            </div>
            <div class="project-info">
              <h3 class="project-title">{project.title}</h3>
              <p class="project-description">{project.description}</p>
              <div class="project-tech">
                {project.tech.map(tech => (
                  <span class="tech-badge">{tech}</span>
                ))}
              </div>
              <div class="project-links">
                <a href={project.github} class="project-link">$ git clone</a>
                <a href={project.demo} class="project-link">$ open demo</a>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
    
    <div class="command">echo "Más información sobre mis proyectos"</div>
    <div class="output">
      <p>Para ver el código fuente de estos y otros proyectos, visita mi repositorio en GitHub:</p>
      <p><code>$ git clone https://github.com/yourusername</code></p>
    </div>
    
    <div class="command">cd ..</div>
    <div class="output">
      <p>Volviendo al directorio principal...</p>
      <p><a href="/">Click aquí</a> para regresar al home.</p>
    </div>
    
    <div class="command blinking-cursor"></div>
  </Terminal>
</Layout>

<style>
  /* Cursor parpadenate como en home */
  .blinking-cursor::after {
    content: "█";
    animation: blink 1s step-end infinite;
  }
  
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
  
  /* Estilo para la grilla de proyectos */
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1.5rem;
    margin: 1.5rem 0;
  }
  
  .project-card {
    background-color: #1c1e26;
    border: 1px solid #44475a;
    border-radius: 6px;
    overflow: hidden;
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
  }
  
  /* Contenedor para el efecto CRT */
  .crt-container {
    position: relative;
    width: 100%;
    height: 160px;
    overflow: hidden;
    background-color: #000;
  }
  
  .project-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: contrast(1.1) brightness(0.8) saturate(1.1);
    opacity: 0.9;
  }
  
  /* Efectos CRT para simular pantalla antigua */
  .crt-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      circle at center,
      rgba(40, 42, 54, 0) 0%,
      rgba(40, 42, 54, 0.2) 80%,
      rgba(40, 42, 54, 0.4) 100%
    );
    pointer-events: none;
  }
  
  .crt-scanlines {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0.15),
      rgba(0, 0, 0, 0.15) 1px,
      transparent 1px,
      transparent 2px
    );
    pointer-events: none;
  }
  
  .crt-flicker {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.1;
    background: white;
    mix-blend-mode: overlay;
    animation: flicker 0.2s infinite alternate;
    pointer-events: none;
  }
  
  @keyframes flicker {
    0%, 100% { opacity: 0.05; }
    50% { opacity: 0.02; }
  }
  
  /* Información del proyecto */
  .project-info {
    padding: 1rem;
  }
  
  .project-title {
    margin: 0 0 0.5rem 0;
    color: #8be9fd;
    font-size: 1.1rem;
  }
  
  .project-description {
    margin: 0 0 1rem 0;
    color: #f8f8f2;
    font-size: 0.9rem;
  }
  
  .project-tech {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }
  
  .tech-badge {
    background: #44475a;
    color: #50fa7b;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
  }
  
  .project-links {
    display: flex;
    justify-content: space-between;
  }
  
  .project-link {
    color: #bd93f9;
    text-decoration: none;
    font-size: 0.85rem;
  }
  
  .project-link:hover {
    text-decoration: underline;
  }
</style>
